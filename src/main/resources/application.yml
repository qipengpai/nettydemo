#server
server:
  # 项目contextPath，一般在正式发布版本中，我们不配置
  #context-path: /boot
  # 该服务绑定IP地址，启动服务器时如本机不是该IP地址则抛出异常启动失败，只有特殊需求的情况下才配置
  #address: 192.168.0.101
  # 错误页，指定发生错误时，跳转的URL。请查看BasicErrorController源码便知
#  error:
#     path: /error
  # 服务端口
  port: 8083

  # session最大超时时间(分钟)，默认为30
  tomcat:
    # tomcat的URI编码
    uri-encoding: utf-8
    # tomcat最大线程数，默认为200
    max-threads: 1000
    # 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹（如：C:\Users\Shanhy\AppData\Local\Temp）
    basedir: D:/springboot-tomcat-tmp
    # 打开Tomcat的Access日志，并可以设置日志格式的方法：
    #server.tomcat.access-log-enabled=true
    #server.tomcat.access-log-pattern=
#datasource
spring:
    datasource:
        name: era
      #  url: jdbc:mysql://192.168.1.10:3307/comic20180224?useSSL=true&useUnicode=true&characterEncoding=utf8
        url: jdbc:mysql://localhost:3306/netty?useSSL=true&useUnicode=true&characterEncoding=utf8
        username: root
        password: 123456
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        minIdle: 5
        maxActive: 50
        # 配置获取连接等待超时的时间
        maxWait: 3000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: false
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
        debug: true
    mvc:
      view:
        prefix: /WEB-INF/jsp/
        suffix: .jsp
      static-path-pattern: /**
    resources:
      static-locations: classpath:/templates/
    devtools:
      restart:
        #热部署生效
        enabled: true
        #设置重启的目录
        #additional-paths: src/main/java
        #classpath目录下的WEB-INF文件夹内容修改不重启
        exclude: WEB-INF/**
    #redis

    redis:
      # Redis服务器地址
      host: 47.104.94.237
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: ASDasd19981018
      jedis:
        pool:
          # 连接池最大连接数（使用负值表示没有限制）
          max-active: 80
          # 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例
          max-idle: 20
          # 控制一个pool最少有多少个状态为idle(空闲的)的jedis实例
          min-idle: 1
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          # 表示当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间(毫秒)，则直接抛出JedisConnectionException；
          max-wait: 1000
      # 连接超时时间（毫秒）
      timeout: 2000
    cache:
      jcache:
        config: classpath:config/ehcache.xml

# mybatis_config
mybatis:
    config-location: classpath:config/mybatis-config.xml
    #typeAliasesPackage: com.qpp.comicdis.basics.entity
    mapper-locations: classpath:mapper/*.xml
logging:
  config: classpath:config/logback-spring.xml


pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  paramsCount: countSql
#自定义的属性和值
myYml:
  simpleProp: simplePropValue
  arrayProps: 1,2,3,4,5
  listProp1:
    - name: abc
      value: abcValue
    - name: efg
      value: efgValue
  listProp2:
    - config2Value1
    - config2Vavlue2
  mapProps:
    key1: value1
    key2: value2


#定时任务
jobs:
  fixedDelay: 5000
  cron: 0/5 * *  * * ?

wss:
    server:
        port: 8888
        host: localhost